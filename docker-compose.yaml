version: '3.8'

services:
  app:
    build: .
    container_name: observability-series-kotlin-edition-app
    hostname: observability-series-kotlin-edition-app
    ports:
      - "8080:8080"
    networks:
      - observability-series-kotlin-edition-network
    healthcheck:
      test: [ "CMD", "wget", "-q", "-O", "-", "http://localhost:8080/actuator/health" ]

  prometheus:
    image: prom/prometheus
    container_name: observability-series-kotlin-edition-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./.docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./.docker/prometheus/alerting.rules.yml:/etc/prometheus/alerting.rules.yml
      - prometheus-data:/prometheus
    networks:
      - observability-series-kotlin-edition-network
    command:
      - --web.enable-lifecycle
      - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      alertmanager:
        condition: service_started
    healthcheck:
      test: [ "CMD", "wget", "-q", "-O", "-", "http://localhost:9090/-/healthy" ]

  alertmanager:
    image: prom/alertmanager
    container_name: observability-series-kotlin-edition-alertmanager
    ports:
      - "9093:9093"
    networks:
      - observability-series-kotlin-edition-network
    volumes:
      - "./.docker/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml"
      - alertmanager-data:/data
    command:
      - --log.level=debug
      - --config.file=/etc/alertmanager/alertmanager.yml
    healthcheck:
      test: [ "CMD", "wget", "-q", "-O", "-", "http://localhost:9093/-/healthy" ]

  grafana:
    image: grafana/grafana:7.5.7
    container_name: observability-series-kotlin-edition-grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./.docker/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./.docker/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - observability-series-kotlin-edition-network
    depends_on:
      prometheus:
        condition: service_healthy
      alertmanager:
        condition: service_started
    healthcheck:
      test: [ "CMD", "wget", "-q", "-O", "-", "http://localhost:3000/api/health" ]

networks:
  observability-series-kotlin-edition-network:
    name: observability-series-kotlin-edition-network

volumes:
  prometheus-data:
  alertmanager-data: